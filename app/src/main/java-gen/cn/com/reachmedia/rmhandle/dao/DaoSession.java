package cn.com.reachmedia.rmhandle.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import cn.com.reachmedia.rmhandle.bean.PointBean;
import cn.com.reachmedia.rmhandle.bean.PointWorkBean;
import cn.com.reachmedia.rmhandle.bean.CommDoorPicBean;
import cn.com.reachmedia.rmhandle.bean.ImageCacheBean;
import cn.com.reachmedia.rmhandle.bean.CompImageBean;

import cn.com.reachmedia.rmhandle.dao.PointBeanDao;
import cn.com.reachmedia.rmhandle.dao.PointWorkBeanDao;
import cn.com.reachmedia.rmhandle.dao.CommDoorPicBeanDao;
import cn.com.reachmedia.rmhandle.dao.ImageCacheBeanDao;
import cn.com.reachmedia.rmhandle.dao.CompImageBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig pointBeanDaoConfig;
    private final DaoConfig pointWorkBeanDaoConfig;
    private final DaoConfig commDoorPicBeanDaoConfig;
    private final DaoConfig imageCacheBeanDaoConfig;
    private final DaoConfig compImageBeanDaoConfig;

    private final PointBeanDao pointBeanDao;
    private final PointWorkBeanDao pointWorkBeanDao;
    private final CommDoorPicBeanDao commDoorPicBeanDao;
    private final ImageCacheBeanDao imageCacheBeanDao;
    private final CompImageBeanDao compImageBeanDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        pointBeanDaoConfig = daoConfigMap.get(PointBeanDao.class).clone();
        pointBeanDaoConfig.initIdentityScope(type);

        pointWorkBeanDaoConfig = daoConfigMap.get(PointWorkBeanDao.class).clone();
        pointWorkBeanDaoConfig.initIdentityScope(type);

        commDoorPicBeanDaoConfig = daoConfigMap.get(CommDoorPicBeanDao.class).clone();
        commDoorPicBeanDaoConfig.initIdentityScope(type);

        imageCacheBeanDaoConfig = daoConfigMap.get(ImageCacheBeanDao.class).clone();
        imageCacheBeanDaoConfig.initIdentityScope(type);

        compImageBeanDaoConfig = daoConfigMap.get(CompImageBeanDao.class).clone();
        compImageBeanDaoConfig.initIdentityScope(type);

        pointBeanDao = new PointBeanDao(pointBeanDaoConfig, this);
        pointWorkBeanDao = new PointWorkBeanDao(pointWorkBeanDaoConfig, this);
        commDoorPicBeanDao = new CommDoorPicBeanDao(commDoorPicBeanDaoConfig, this);
        imageCacheBeanDao = new ImageCacheBeanDao(imageCacheBeanDaoConfig, this);
        compImageBeanDao = new CompImageBeanDao(compImageBeanDaoConfig, this);

        registerDao(PointBean.class, pointBeanDao);
        registerDao(PointWorkBean.class, pointWorkBeanDao);
        registerDao(CommDoorPicBean.class, commDoorPicBeanDao);
        registerDao(ImageCacheBean.class, imageCacheBeanDao);
        registerDao(CompImageBean.class, compImageBeanDao);
    }
    
    public void clear() {
        pointBeanDaoConfig.getIdentityScope().clear();
        pointWorkBeanDaoConfig.getIdentityScope().clear();
        commDoorPicBeanDaoConfig.getIdentityScope().clear();
        imageCacheBeanDaoConfig.getIdentityScope().clear();
        compImageBeanDaoConfig.getIdentityScope().clear();
    }

    public PointBeanDao getPointBeanDao() {
        return pointBeanDao;
    }

    public PointWorkBeanDao getPointWorkBeanDao() {
        return pointWorkBeanDao;
    }

    public CommDoorPicBeanDao getCommDoorPicBeanDao() {
        return commDoorPicBeanDao;
    }

    public ImageCacheBeanDao getImageCacheBeanDao() {
        return imageCacheBeanDao;
    }

    public CompImageBeanDao getCompImageBeanDao() {
        return compImageBeanDao;
    }

}
